import os
import pickle
import pandas as pd
from django.shortcuts import render
from django.http import JsonResponse
from django.core.files.storage import FileSystemStorage
from Main.FeaturesExtraction import extract_features  # Import your feature extraction function

# Load the trained model
model_path = os.path.join(os.path.dirname(__file__), 'model', 'Malware.pkl')
with open(model_path, 'rb') as model_file:
    model = pickle.load(model_file)

def Home(request):
    if request.method == 'POST' and request.FILES['file']:
        uploaded_file = request.FILES['file']
        fs = FileSystemStorage()
        file_path = fs.save(uploaded_file.name, uploaded_file)
        file_url = fs.url(file_path)

        # Read the uploaded file and extract features
        file_features = extract_features(file_path)

        # Predict using the loaded model
        is_malware = model.predict([file_features])[0]

        if is_malware == 1:
            return JsonResponse({'message': 'The file is detected as malware.', 'malware': True})
        else:
            # compressed_file_path = compress_file(file_path)
            compressed_file_path = "Compressed Successfully"
            return JsonResponse({'message': 'The file is safe and has been compressed.', 'malware': False, 'compressed_file_url': compressed_file_path})

    return render(request, 'index.html')
