import pickle
from django.shortcuts import render,redirect,HttpResponse
from django.http import JsonResponse
from django.core.files.storage import FileSystemStorage
import os
from core.settings import BASE_DIR,MEDIA_ROOT
from Main.FeaturesExtraction import extract_features
from Main.fileCompress import compress_file_to_zip

# Load the trained model
model_path = os.path.join(BASE_DIR, 'MalwareModel/Malware.pkl')
with open(model_path, 'rb') as model_file:
    model = pickle.load(model_file)

def Home(request):
    if request.method == 'POST' and request.FILES['file']:
        uploaded_file = request.FILES['file']
        fs = FileSystemStorage(location=os.path.join(MEDIA_ROOT, 'UploadFiles'))
        file_path_temp = fs.save(uploaded_file.name, uploaded_file)
        file_path = os.path.join(BASE_DIR, 'media/UploadFiles', file_path_temp)
        # Check if the file exists
        if not os.path.exists(file_path):
            return JsonResponse({'message': 'File not found.', 'malware': False})

        # Read the uploaded file and extract features
        file_features = extract_features(file_path)

        # Predict using the loaded model
        is_malware = model.predict([file_features])[0]

        if is_malware == 1:
            os.remove(file_path)
            return JsonResponse({'message': 'The file is detected as malware.', 'malware': True})
        else:
            return JsonResponse({'message': 'The file is safe and has been compressed.', 'malware': False, 'fileName': file_path_temp})

    return render(request, 'index.html')

def Compression(request):
    if request.method == 'GET':
        filename = request.GET.get('filename')
        print(filename)
        if not filename:
            return redirect("/404")
        filepath= os.path.join(BASE_DIR, 'media/UploadFiles', filename)
        print(filepath)
        if not os.path.exists(filepath):
            return redirect("/404")
        return render(request,'compress.html',{'filename':filename})
    
    if request.method=="POST" and request.FILES['filename']:
        filename=request.POST.get('filename')
        print(filename)
        if not filename:
            return redirect("/404")
        filepath= os.path.join(BASE_DIR, 'media/UploadFiles', filename)
        print(filepath)
        if not os.path.exists(filepath):
            return redirect("/404")
        
        if(compress_file_to_zip(filename)):
            return JsonResponse({'message': 'File compressed successfully.', 'compress': True, 'fileName': filename})
        else:
            return JsonResponse({'message': 'An error occurred while compressing the file.', 'compress': False})


    return redirect("/404")



def Download(request):
    if request.method=="POST":
        filename=request.POST.get('filename')
        if not filename:
            return redirect("/404")
        filepath= os.path.join(BASE_DIR, 'media/CompressedFiles', f"{filename}.zip")
        if not os.path.exists(filepath):
            return redirect("/404")
        with open(filepath, 'rb') as file:
            response = HttpResponse(file.read(), content_type="application/zip")
            response['Content-Disposition'] = f'attachment; filename={filename}.zip'
            return response
    return redirect("/404")
















def Custom404(request):
    return render(request,"404.html")