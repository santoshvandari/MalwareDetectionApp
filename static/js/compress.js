document.addEventListener('DOMContentLoaded', () => {

    const downloadBtn=document.getElementById('download')
    downloadBtn.display = 'none';
    // Handle form submission
    let CompressForm=document.getElementById('compressForm')
    CompressForm.addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent the default form submission
        var formData = new FormData(this);
        const loadingOverlay = document.getElementById('loading-overlay');

        // Show loading overlay
        loadingOverlay.style.display = 'flex';

        fetch('/compress', {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRFToken': getCookie('csrftoken') // Include CSRF token
            }
        })
        .then(response => response.json())
        .then(data => {
        loadingOverlay.style.display = 'none';

            if (data.compress) {
                // Show custom dialog box
                downloadBtn.display = 'block';
                CompressForm.display = 'none';
                downloadBtn.addEventListener('click', function() {
                    downloadFile(data.filename);
                });
            }else{
                // Handle file compression failure
                alert("* Something Went Wrong!! Please Try Again");
            }
        })
        .catch(error => console.error('Error:', error));
    });

// post request for download file
function downloadFile(filename) {
    fetch('/download', {
        method: 'POST',
        body: JSON.stringify({filename: filename}),
        headers: {
            'Content-Type': 'application/json',
            'X-CSRFToken': getCookie('csrftoken')
        }
    })
    .then(response => response.blob())
    .then(blob => {
        console.log(success);
    })
    .catch(error => console.error('Error:', error));
}
});
